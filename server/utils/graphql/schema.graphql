# Timestamp is serialized automatically when sent from our resolversSetup.
# It should be a JS timpestamp integer (i.e. the result of Date.now)
scalar Timestamp

schema {
  query: Query
}

interface Resource {
  id: ID!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  creator: User!
  userPermissions: Permission
}

type Permission {
  id: ID!
  userID: ID
  level: Int!
  resourceID: ID
}

type Issue implements Resource {
  id: ID!
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  creator: User!
  title: String!
  body: String
  priority: String!
  status: String!
  category: String
  project: Project!
  tags: [String]!
  userPermissions: Permission
}

type Project implements Resource {
  id: ID
  dateCreated: Timestamp!
  dateUpdated: Timestamp!
  creator: User!
  name: String!
  alias: String
  userPermissions: Permission
}

type Task implements Resource{
    id: ID!
    dateCreated: Timestamp!
    dateUpdated: Timestamp!
    creator: User!
    title: String!
    body: String
    parent: Issue!
    completed: Boolean!
    userPermissions: Permission
}

# TODO: associate a User with 0..* Projects
type User {
  id: ID!
  joinDate: Timestamp!
  username: String!
  email: String!
  firstname: String!
  lastname: String!
  avatarUrl: String
  bio: String
}

enum CommentParentType {
    ISSUE
    TASK
}

union CParentType = Issue | Task
interface Comment {
    id: ID!
    dateCreated: Timestamp!
    dateUpdated: Timestamp!
    creator: User!
    body: String!
    parent: CParentType
    parentType: CommentParentType!
    userPermissions: Permission
}

type IssueComment implements Resource & Comment {
    id: ID!
    dateCreated: Timestamp!
    dateUpdated: Timestamp!
    creator: User!
    body: String!
    parent: Issue!
    parentType: CommentParentType!
    userPermissions: Permission
}

type TaskComment implements Resource & Comment {
    id: ID!
    dateCreated: Timestamp!
    dateUpdated: Timestamp!
    creator: User!
    body: String!
    parent: Task!
    parentType: CommentParentType!
    userPermissions: Permission
}
